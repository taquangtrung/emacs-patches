diff --git a/src/xdisp.c b/src/xdisp.c
index 1b198df4076..c7d62648633 100644
--- a/src/xdisp.c
+++ b/src/xdisp.c
@@ -2592,6 +2592,9 @@ get_glyph_string_clip_rects (struct glyph_string *s, NativeRectangle *rects, int
 	      r.height = min (max_y - r.y, height);
 	    }
 	}
+      // TRUNG: update the cursor rectangle information with line spacing data
+      r.y = WINDOW_TO_FRAME_PIXEL_Y (s->w, s->row->y);
+      r.height = s->row->height + s->row->extra_line_spacing;
     }
 
   if (s->row->clip)
@@ -2739,6 +2742,8 @@ get_phys_cursor_geometry (struct window *w, struct glyph_row *row,
 	  y = y0;
 	}
     }
+  // TRUNG: update the correct height for the hollow and bar cursor types.
+  h = max (h, row->height);
 
   *xp = WINDOW_TEXT_TO_FRAME_PIXEL_X (w, x);
   *yp = WINDOW_TO_FRAME_PIXEL_Y (w, y);
@@ -23338,7 +23343,18 @@ append_space_for_newline (struct it *it, bool default_face_p)
 		}
 	      if (extra_line_spacing > 0)
 		{
-		  it->descent += extra_line_spacing;
+		  // TRUNG: Vertically center the current line with extra line spacing
+		  int extra_line_spacing_descent = extra_line_spacing / 2;
+		  int extra_line_spacing_ascent = extra_line_spacing - extra_line_spacing_descent;
+		  // Remove line spacing in minibuffer since it will truncate the text height.
+		  if (it->w->mini && extra_line_spacing_ascent > 0) {
+		    extra_line_spacing_ascent = 0;
+		    extra_line_spacing_descent = 0;
+		    extra_line_spacing = 0;
+		    it->max_extra_line_spacing = 0;
+		  }
+		  it->ascent += extra_line_spacing_ascent;
+		  it->descent += extra_line_spacing_descent;
 		  if (extra_line_spacing > it->max_extra_line_spacing)
 		    it->max_extra_line_spacing = extra_line_spacing;
 		}
@@ -24484,7 +24500,8 @@ maybe_produce_line_number (struct it *it)
       else if (EQ (Vdisplay_line_numbers, Qvisual))
 	max_lnum = it->pt_lnum + it->w->desired_matrix->nrows - 1;
       else
-	max_lnum = this_line + it->w->desired_matrix->nrows - 1 - it->vpos;
+	// TRUNG: compute the maximum line nume more precisely.
+	max_lnum = this_line + it->w->total_lines - 1 - it->vpos;
       max_lnum = max (1, max_lnum);
       it->lnum_width = max (it->lnum_width, log10 (max_lnum) + 1);
       eassert (it->lnum_width > 0);
@@ -24509,7 +24526,8 @@ maybe_produce_line_number (struct it *it)
      called when no display elements were produced from the
      following line, so the paragraph direction might be unknown.
      Therefore we cheat and add 2 blanks, one on either side.  */
-  pint2str (lnum_buf, it->lnum_width + 1, lnum_to_display);
+  // TRUNG: remove the left margin when displaying line numbers
+  pint2str (lnum_buf, it->lnum_width, lnum_to_display);
   strcat (lnum_buf, " ");
 
   /* Setup for producing the glyphs.  */
@@ -32664,7 +32682,18 @@ gui_produce_glyphs (struct it *it)
 
   if (extra_line_spacing > 0)
     {
-      it->descent += extra_line_spacing;
+      // TRUNG: Vertically center the current line with extra line spacing
+      int extra_line_spacing_descent = extra_line_spacing / 2;
+      int extra_line_spacing_ascent = extra_line_spacing - extra_line_spacing_descent;
+      // Do not use line spacing in minibuffer since it will truncate the text height.
+      if (it->w->mini && extra_line_spacing_ascent > 0) {
+	extra_line_spacing_ascent = 0;
+	extra_line_spacing_descent = 0;
+	extra_line_spacing = 0;
+	it->max_extra_line_spacing = 0;
+      }
+      it->ascent += extra_line_spacing_ascent;
+      it->descent += extra_line_spacing_descent;
       if (extra_line_spacing > it->max_extra_line_spacing)
 	it->max_extra_line_spacing = extra_line_spacing;
     }
diff --git a/src/xwidget.c b/src/xwidget.c
index 58910459142..89e0be591eb 100644
--- a/src/xwidget.c
+++ b/src/xwidget.c
@@ -376,6 +376,10 @@ DEFUN ("make-xwidget",
 	      xw->widget_osr = webkit_web_view_new_with_related_view (related_view);
 	    }
 
+	  // TRUNG: Enable preferring dark mode
+	  g_object_set(gtk_settings_get_default(),
+		       "gtk-application-prefer-dark-theme", TRUE, NULL);
+
 	  /* Enable the developer extras.  */
 	  settings = webkit_web_view_get_settings (WEBKIT_WEB_VIEW (xw->widget_osr));
 	  g_object_set (G_OBJECT (settings), "enable-developer-extras", TRUE, NULL);
